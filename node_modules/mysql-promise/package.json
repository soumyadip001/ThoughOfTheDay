{
  "name": "mysql-promise",
  "version": "4.1.0",
  "description": "Small wrapper for mysql that use promises.",
  "main": "index.js",
  "scripts": {
    "test": "NODE_ENV=test npm run lint && istanbul cover -i 'index.js' _mocha -- -u exports -R spec 'test/**/*.test.js'",
    "lint": "eslint --ext '.js' test index.js",
    "release": "npm test && release-it -n -i patch",
    "release:minor": "npm test && release-it -n -i minor",
    "release:major": "npm test && release-it -n -i major"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/martinj/node-mysql-promise"
  },
  "keywords": [
    "mysql",
    "promise"
  ],
  "author": {
    "name": "Martin Jonsson",
    "email": "martin.jonsson@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/martinj/node-mysql-promise/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.6",
    "mysql": "^2.12.0"
  },
  "devDependencies": {
    "@aptoma/eslint-config": "^5.0.1",
    "eslint": "^2.13.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.1.2",
    "mysql2": "^1.1.2",
    "release-it": "^2.5.1",
    "should": "^11.1.1",
    "sinon": "^1.17.6"
  },
  "greenkeeper": {
    "ignore": [
      "eslint"
    ]
  },
  "readme": "# mysql-promise\n\nSmall wrapper for [mysql](https://www.npmjs.com/package/mysql) and [mysql2](https://github.com/sidorares/node-mysql2) that use promises.\n\n[![Build Status](https://travis-ci.org/martinj/node-mysql-promise.svg?branch=master)](https://travis-ci.org/martinj/node-mysql-promise)\n\n## Installation\n\nThis module is installed via npm:\n\n``` bash\n$ npm install mysql-promise\n```\n\n## Example Usage\n\n\tvar db = require('mysql-promise')();\n\n\tdb.configure({\n\t\t\"host\": \"localhost\",\n\t\t\"user\": \"foo\",\n\t\t\"password\": \"bar\",\n\t\t\"database\": \"db\"\n\t});\n\n\tdb.query('UPDATE foo SET key = ?', ['value']).then(function () {\n\t\treturn db.query('SELECT * FROM foo');\n\t}).spread(function (rows) {\n\t\tconsole.log('Loook at all the foo', rows);\n\t});\n\n\t//using multiple databases, giving it a name 'second-db' so it can be retrieved inside other modules/files.\n\tvar db2 = require('mysql-promise')('second-db');\n\n\t//check if has already been configured\n\tif (!db2.isConfigured()) {\n\t\tdb2.configure({\n\t\t\t\"host\": \"localhost\",\n\t\t\t\"user\": \"foo\",\n\t\t\t\"password\": \"bar\",\n\t\t\t\"database\": \"another-db\"\n\t\t});\n\t}\n\n\tdb2.query('SELECT * FROM users').spread(function (users) {\n\t\tconsole.log('Hello users', users);\n\t});\n\n\nUsing [mysql2](https://github.com/sidorares/node-mysql2)\n\n\tvar mysql2 = require('mysql2');\n\tvar db = require('mysql-promise')();\n\tvar opts = {\n\t\t\"host\": \"localhost\",\n\t\t\"user\": \"foo\",\n\t\t\"password\": \"bar\",\n\t\t\"database\": \"db\"\n\t};\n\n\tdb.configure(opts, require('mysql2'));\n\n\nUse different promise implementation\n\n\tvar db = require('mysql-promise')();\n\n\tdb.configure(dbOpts, null, PromiseImpl);\n",
  "readmeFilename": "README.md",
  "_id": "mysql-promise@4.1.0",
  "dist": {
    "shasum": "c994d05eb997c6041022fc12ae3310210a7cb70b"
  },
  "_from": "mysql-promise@",
  "_resolved": "https://registry.npmjs.org/mysql-promise/-/mysql-promise-4.1.0.tgz"
}
